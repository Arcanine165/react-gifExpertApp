{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","onFocus","getGifs","category","a","apiGiphy","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,gBAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,8BACI,sBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAOd,SAEI,uBACIO,KAAK,OACLC,MAAST,EACTU,SA1BU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,QAyBXG,QAvBM,SAACT,GAEnBF,EAAc,Y,+BCVTY,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DAEJ,mCACTC,EAHa,iDAGwCC,UAAUH,GAHlD,6BAEJ,oCAFI,SAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZC,IAAG,UAACH,EAAII,cAAL,aAAC,EAAYC,iBAAiBF,QAVtB,kBAcZL,GAdY,4CAAH,sDCEPQ,EAAc,SAAC,GAAmB,EAAlBL,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OADAI,QAAQC,IAAI,QAAQL,GAEhB,sBAAKM,UAAU,uDAAf,UACI,qBAAKC,IAAKP,EAAKQ,IAAKT,IACpB,4BAAIA,QCDHU,EAAU,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAErB,ECLwB,SAACA,GACrB,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLgB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAdAC,qBAAU,WACN3B,EAAQC,GACH2B,MAAK,SAACC,GACHC,YAAW,WAEPJ,EAAS,CACLlB,KAAKqB,EACLL,SAAQ,MAEd,UAGZ,CAACvB,IACJiB,QAAQC,IAAIM,EAAMjB,MACViB,EDdIM,CAAa9B,GAArBO,EAAP,EAAOA,KAIP,OACQ,qCACA,6BAAKP,IAGD,qBAAKmB,UAAU,YAAf,SAEIZ,EAAKE,KAAI,SAACC,GAAD,OACL,cAAC,EAAD,eAESA,GADEA,EAAIC,aEjB1BoB,EAAe,WACxB,MAAoC9C,mBAAS,IAA7C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAKA,OACQ,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEKgD,EAAWvB,KAAI,SAACT,GAAD,OAER,cAAC,EAAD,CAEIA,SAAaA,GADNA,U,MCbvCiC,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.47763e28.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('Escribe Algo')\r\n    const handleInputChange = (e)=>{\r\n       \r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleOnFocus = (e)=>{\r\n       \r\n        setInputValue('')\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length>2){\r\n\r\n            setCategories(cats=>[inputValue,...cats])\r\n            setInputValue('')\r\n            \r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    value = {inputValue}\r\n                    onChange = {handleInputChange}\r\n                    onFocus = {handleOnFocus}\r\n                />\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n    \r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category)=>{\r\n\r\n    const apiKey = \"rti2PredBgK03g9ohT0XQXpvSdJoFrj1\";\r\n    const apiGiphy = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\r\n    const resp = await fetch(apiGiphy);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map (img =>{\r\n        return{\r\n            id: img.id,\r\n            title : img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log('imgs:',url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slow\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    // const [images, setimages] = useState([]);\r\n    const {data} = useFetchGifs(category);\r\n    \r\n    \r\n   \r\n    return (\r\n            <>\r\n            <h3>{category}</h3>\r\n            \r\n            \r\n                <div className=\"card-grid\">\r\n                \r\n                {   data.map((img)=>(\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            { ...img }\r\n                    />\r\n                    ))\r\n                }\r\n                </div>\r\n                \r\n            \r\n            </>\r\n\r\n\r\n\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category)=>{\r\n        const [state, setstate] = useState({\r\n            data:[],\r\n            loading: true\r\n        })\r\n        useEffect(()=>{\r\n            getGifs(category)\r\n                .then((imgs)=>{\r\n                    setTimeout(()=>{\r\n                        \r\n                        setstate({\r\n                            data:imgs,\r\n                            loading:false\r\n                        })\r\n                    },1000)\r\n                    \r\n                });\r\n        },[category])\r\n       console.log(state.data)\r\n        return state;\r\n}","import {useState} from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    // const handleAdd = ()=>{\r\n    //     setCategories([...categories,'Avatar']);\r\n    // }\r\n    \r\n    return  (\r\n            <>\r\n                <h1>GifExpertApp</h1>\r\n                <AddCategory setCategories = {setCategories} />\r\n                <hr/>\r\n                \r\n                    {categories.map((category)=>\r\n                        \r\n                            <GifGrid \r\n                                key = {category}\r\n                                category = { category }\r\n                            />\r\n                        \r\n                    )}\r\n              \r\n                \r\n            </>\r\n    )\r\n   \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n//GifExpertApp\n//<h2>GifExpertApp</h2>"],"sourceRoot":""}